
  
  - platform: tod
    name: Morning
    after: sunrise
    before: '09:00'

  - platform: tod
    name: Daytime
    after: '10:00:00'
    before: sunset

  - platform: tod
    name: Evening
    after: sunset
    before: '00:00:00'

  - platform: tod
    name: Night
    after: '00:00:00'
    before: sunrise

  - platform: ping
    host: !secret livingroom_tv_ip
    name: livingroom_tv
    count: 2
    scan_interval: 30

  - platform: ping
    host: !secret bedroom_tv_ip
    name: bedroom_tv
    count: 2
    scan_interval: 30

  - platform: template
    sensors:
      # jyoti_home_towards:
      #   friendly_name: jyoti home towards
      #   value_template: '{{ states.proximity.jyoti_home.attributes.dir_of_travel == "towards"  and states.proximity.jyoti_home.state | int < 7 }}'
      #  # value_template: '{{ states.proximity.jyoti_home.state | int < 7 }}'
      # jyoti_work_towards:
      #   friendly_name: jyoti work towards
      #   value_template: '{{ states.proximity.jyoti_work.attributes.dir_of_travel == "towards" and states.proximity.jyoti_work.state | int < 7 }}'
      #  # value_template: '{{ states.proximity.jyoti_work.state | int < 7 }}'
      # lalit_home_towards:
      #   friendly_name: lalit home towards
      #   value_template: '{{ states.proximity.lalit_home.attributes.dir_of_travel == "towards" and states.proximity.lalit_home.state | int < 17 }}'
      #   #value_template: '{{ states.proximity.lalit_home.state | int < 17 }}'
      # lalit_work_towards:
      #   friendly_name: lalit work towards
      #   value_template: '{{ states.proximity.lalit_work.attributes.dir_of_travel == "towards" and states.proximity.lalit_work.state | int < 17}}' 
      #   #value_template: '{{ states.proximity.lalit_work.state | int < 15}}' 
      workday:
        friendly_name: workday
        value_template: '{{ (states.sun.sun.state in ("below_horizon","above_horizon")) and (now().weekday() < 5) and (states.calendar.holidays_in_singapore.state == "off") }}'
        entity_id: sun.sun
      announcement_mode:
        friendly_name: Announcement Mode
        value_template: '{{ (states.input_boolean.announcement_mode.state == "on") }}'
        entity_id: input_boolean.announcement_mode
      sleep_mode:
        friendly_name: Sleep Mode
        value_template: '{{ (states.input_boolean.sleep_mode.state == "on") }}'
        entity_id: input_boolean.sleep_mode
      tv_mode:
        friendly_name: Livingroom Tv
        value_template: '{{ (states.binary_sensor.livingroom_tv.state == "on") }}'
        entity_id: binary_sensor.livingroom_tv

#########################################################################################################
#some one in livingroom
      # livingroom:
      #   friendly_name: Livingroom
      #   value_template: >
      #     {{ (states.sensor.lalit_room_location.state == "livingroom" or
      #           states.sensor.jyoti_room_location.state == "livingroom")
      #       or ( 
      #             ( state_attr("binary_sensor.livingroom_motion","No motion since")|int < 5*60 ) and
      #             ( state_attr("binary_sensor.gallery_motion","No motion since")|int < 5*60 ) and
      #             ( state_attr("binary_sensor.kitchen_motion","No motion since")|int < 5*60 ) 
      #           )
      #       or (
      #             ( states.image_processing.deepstackod_livingroom.attributes["ALL person count"]|int>=1) or
      #             ( states.image_processing.rekognition_livingroom.state|int>=1) or
      #             ( states.image_processing.facebox_livingroom.state|int>=1)
      #       ) 
      #     }}
      #   entity_id: sensor.time

      livingroom:
        friendly_name: Livingroom
        value_template: >
          {{ (states.sensor.lalit_room_location.state == "livingroom" or
                states.sensor.jyoti_room_location.state == "livingroom")
            or ( 
                  ( state_attr("binary_sensor.livingroom_motion","No motion since")|int < 5*60 ) and
                  ( state_attr("binary_sensor.gallery_motion","No motion since")|int < 5*60 ) and
                  ( state_attr("binary_sensor.kitchen_motion","No motion since")|int < 5*60 ) 
                )
            or (
                  ( states.image_processing.doods_livingroom.state|int>=1) or
                  ( states.image_processing.facebox_livingroom.state|int>=1)
            ) 
          }}
        entity_id: sensor.time

#some one in bedroom
      # bedroom:
      #   friendly_name: Bedroom
      #   value_template: >
      #     {{ (
      #           states.sensor.lalit_room_location.state == "bedroom" or states.sensor.jyoti_room_location.state == "bedroom" 
      #         )
      #       or 
      #         ( 
      #             ((now()-states.binary_sensor.bedroom_motion.last_changed).total_seconds() < 30*60 and is_state("binary_sensor.bedroom_motion", "on")  ) or 
      #             ((now()-states.binary_sensor.bedroom_motion_2.last_changed).total_seconds() < 30*60 and is_state("binary_sensor.bedroom_motion_2", "on") )  or
      #             ((now()-states.binary_sensor.bathroom_motion.last_changed).total_seconds()  < 30*60 and is_state("binary_sensor.bathroom_motion", "on")  ) 
      #         )
      #       or (
      #             ( states.image_processing.deepstackod_bedroom.attributes["ALL person count"]|int>=1) or
      #             ( states.image_processing.rekognition_bedroom.state|int>=1) or
      #             ( states.image_processing.facebox_bedroom.state|int>=1)
      #         )  
      #     }}
      #   entity_id: sensor.time
      bedroom:
        friendly_name: Bedroom
        value_template: >
          {{ (
                states.sensor.lalit_room_location.state == "bedroom" or states.sensor.jyoti_room_location.state == "bedroom" 
              )
            or 
              ( 
                  ((now()-states.binary_sensor.bedroom_motion.last_changed).total_seconds() < 5*60 and is_state("binary_sensor.bedroom_motion", "on")  ) or 
                  ((now()-states.binary_sensor.bedroom_motion_2.last_changed).total_seconds() < 5*60 and is_state("binary_sensor.bedroom_motion_2", "on") )  or
                  ((now()-states.binary_sensor.bathroom_motion.last_changed).total_seconds()  < 5*60 and is_state("binary_sensor.bathroom_motion", "on")  ) 
              )
            or (
                  ( states.image_processing.doods_bedroom.state|int>=1) or
                  ( states.image_processing.facebox_bedroom.state|int>=1)
              )  
          }}
        entity_id: sensor.time

#some one in office
      office:
        friendly_name: Office
        value_template: >
          {{ (
                states.sensor.lalit_room_location.state == "office" or 
                states.sensor.jyoti_room_location.state == "office"
              )
            or 
              ( 
                ( state_attr("binary_sensor.office_motion","No motion since")|int < 5*60 ) 
              )
            or (
                ( states.image_processing.doods_office.state|int>=1) or
                ( states.image_processing.facebox_office.state|int>=1)
            ) 
          }}
        entity_id: sensor.time
        


#some one in familyroom
      familyroom:
        friendly_name: Familyroom
        value_template: >
          {{ 
              ( 
                ( (now()-states.binary_sensor.familyroom_motion.last_changed).total_seconds() < 15*60 and is_state("binary_sensor.familyroom_motion","on") )
              )
          }}
        entity_id: sensor.time
#########################################################################################################
#jyoti sleeping
      jyoti_sleeping:
        friendly_name: Jyoti Sleeping
        value_template: >
          {{ 
              states.binary_sensor.night.state =="on" and 
              ( (now()-states.sensor.jyoti_mobile_in_use.last_updated).total_seconds() > 30*60 ) 
          }}
        entity_id: sensor.time
#lalit sleeping
      lalit_sleeping:
        friendly_name: Lalit Sleeping
        value_template: >
          {{ 
              states.binary_sensor.night.state =="on" and  
              ( (now()-states.sensor.lalit_mobile_in_use.last_updated).total_seconds() > 30*60 ) 
          }}
        entity_id: sensor.time

  # - platform: bayesian
  #   prior: 0.5
  #   name: lalit at home
  #   probability_threshold: 0.66
  #   observations:
  #     - entity_id: device_tracker.lalit_zanzito
  #       prob_given_true: 0.8
  #       prob_given_false: 0.3
  #       platform: state
  #       to_state: home
  #     - entity_id: device_tracker.lalit_nmap
  #       prob_given_true: 1.0
  #       prob_given_false: 0.7
  #       platform: state
  #       to_state: home
  #     - entity_id: device_tracker.lalit_gpslogger
  #       prob_given_true: 0.6
  #       prob_given_false: 0.5
  #       platform: state
  #       to_state: home

  # - platform: bayesian
  #   prior: 0.5
  #   name: jyoti at home
  #   probability_threshold: 0.75
  #   observations:
  #     - entity_id: device_tracker.jyoti_zanzito
  #       prob_given_true: 0.8
  #       prob_given_false: 0.3
  #       platform: state
  #       to_state: home
  #     - entity_id: device_tracker.jyoti_nmap
  #       prob_given_true: 1.0
  #       prob_given_false: 0.7
  #       platform: state
  #       to_state: home
  #     - entity_id: device_tracker.jyoti_gpslogger
  #       prob_given_true: 0.6
  #       prob_given_false: 0.5
  #       platform: state
  #       to_state: home

# and (states.binary_sensor.gallery_motion.attributes["No motion since"]|int > 5*60)

  - platform: mqtt
    name: jyoti mobile zanzito status
    state_topic: zanzito/jyoti/status
    payload_on: "1"
    payload_off: "0"
    device_class: connectivity
  - platform: mqtt
    name: lalit mobile zanzito status
    state_topic: zanzito/lalit/status
    payload_on: "1"
    payload_off: "0"
    device_class: connectivity

  # - platform: mqtt
  #   name: lalit mobile charging
  #   state_topic: zanzito/lalit/device_info
  #   value_template: '{{ value_json.battery_charging }}'
  #   payload_on: "true"
  #   payload_off: "false"

  # - platform: mqtt
  #   name: jyoti mobile charging
  #   state_topic: zanzito/jyoti/device_info
  #   value_template: '{{ value_json.battery_charging }}'
  #   payload_on: "true"
  #   payload_off: "false"

  # - platform: rest
  #   resource: 
  #   method: GET
  #   name: bedroom camera motion
  #   device_class: motion
  #   value_template: '{{ value_json. }}'